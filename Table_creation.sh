#!/bin/bash
######################################################################################################################
# Program    : automate_end.sh                                                         #
# Author     : Samriti Attrey (sattrey@vmware.com)              #
# Date       : 3-Oct-2018                                  #
# Purpose    : This script is used to automate the end points  #
# Modification History                                                                                               #
# -----------  ------------------  --------------------------------------                                            #
# 11/14/2016   Samriti Attrey         Initial version                                                              #
#                                                                                                                    #
######################################################################################################################
#
#set -x -v
. /apps/infa/PowerCenter8.6.1/server/infa_shared/Scripts/automate.env
execSQL1()
{
   echo -e "\n##### CALLING FUNCTION execSQL1 #######" >> $LogFile
   
   ############# Check arguments ##############################
   if [ $# -lt 1 ]
   then
      err "ERROR: Incorrect number of arguments passed\n\nDB Login file is an optional argument." 
      ##### ENDING FUNCTION execSQL1 #######
   fi
   SQLSTRING=$1
   DBCONNECTSTRING=$DBUSER1/$PASSWD1@$SERVER1
   echo -e "Obtained DB connection details.\n" >> $LogFile
   
   ############### Create SQL file  ###########################
   SQLFILE=SQLName_$$.sql
   echo -e "Creating temp Query file..." >> $LogFile
   
   echo -e "set trimspool on;" > $SQLFILE
   echo -e "set linesize 10000;" >> $SQLFILE
   echo -e "set serveroutput on;" >> $SQLFILE
   echo -e "$SQLSTRING" >> $SQLFILE
   echo -e "Created Query file $SQLFILE." >> $LogFile
   echo -e "$SQLSTRING"  >> $LogFile
   echo -e "SQL file contents to be executed:\n" >> $LogFile
   cat $SQLFILE >> $LogFile
       
   ####### Execute the query ##############
   echo -e "Connecting to DB to execute query..." >> $LogFile
   
QUERYOUTPUT=`sqlplus -s $DBCONNECTSTRING @$SQLFILE 2>&1 <<- EOF
commit
exit
EOF`
   
      ####### Check if SQLPLUS returned an error ##########
   if [ $? -ne 0 ]
   then
      inf_log "Output of the query is:\n\n$QUERYOUTPUT\n\n"
      err "Error $? : Error executing SQLPLUS. Please check log"	
   fi
   
   #inf_log "Output of the query is:\n\n$QUERYOUTPUT\n\n" 
   ######### Check if QUERY returned an error ##########
   ERR_COUNT1=`echo -e "$QUERYOUTPUT"|grep -i "^ERROR"|wc -l|tr -s ' '`
   ERR_COUNT2=`echo -e "$QUERYOUTPUT"|grep -i "^SP2-"|wc -l|tr -s ' '`
   ERR_COUNT3=`echo -e "$QUERYOUTPUT"|grep -i "^CPY-"|wc -l|tr -s ' '`
   ERR_COUNT=`expr $ERR_COUNT1 + $ERR_COUNT2 + $ERR_COUNT3`
 
   if [ $ERR_COUNT -ne 0 ]
   then
      echo -e "Deleting temporary SQL file $SQLFILE..." >> $LogFile
      rm $SQLFILE 2>&1 >> $LogFile
      echo -e "Deleted temporary SQL file $SQLFILE..." >> $LogFile
	  cat $LogFile
	  err "ERROR!!! Errors were generated by SQL query. Please check query output for more details"
   else 
		echo -e "SQL executed successfully!!" >> $LogFile
		echo -e "Deleting temporary SQL file $SQLFILE..." >> $LogFile
	    rm $SQLFILE 2>&1 >> $LogFile
	    echo -e "Deleted temporary SQL file $SQLFILE..." >> $LogFile
   fi
   
      echo -e "##### ENDING FUNCTION execSQL1 #######\n\n" >> $LogFile

   echo -e "$QUERYOUTPUT"  ## This output will be captured by a variable in the main script   

   return 0
}

SQLSTRING="DROP TABLE STG_ENDPOINT;"
Table_TRUN=`execSQL1 "$SQLSTRING"`
SQLSTRING="CREATE TABLE STG_ENDPOINT
(
Session_Name varchar2(4000),
Wf_Name varchar2(4000),
Connection_val varchar2(4000),
Host_name varchar2(4000),
User_name_APP varchar2(4000),
CONNECTION_SUB varchar2(4000),
Relational_Details varchar2(4000),
ParamFile_name varchar2(4000)
);"
Table_Create=`execSQL1 "$SQLSTRING"`
exit 0